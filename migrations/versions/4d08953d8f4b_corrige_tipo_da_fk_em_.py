"""Corrige tipo da FK em LancamentoNotaFiscal e recria a tabela

Revision ID: 4d08953d8f4b
Revises: 
Create Date: 2025-08-30 14:01:23.682413

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4d08953d8f4b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # 1. Primeiro, removemos a dependência (a chave estrangeira) da tabela 'nfe_importada'.
    #    Isso libera a tabela 'certificados_digitais' para ser modificada ou removida.
    with op.batch_alter_table('nfe_importada', schema=None) as batch_op:
        batch_op.drop_constraint('nfe_importada_certificado_id_fkey', type_='foreignkey')
        batch_op.drop_column('certificado_id')

    # 2. Agora que não há dependências, podemos apagar a tabela antiga com segurança.
    op.drop_table('certificados_digitais')

    # 3. Por fim, aplicamos as novas colunas à tabela correta 'certificado_digital'.
    with op.batch_alter_table('certificado_digital', schema=None) as batch_op:
        batch_op.add_column(sa.Column('bloqueado_ate', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('ultima_consulta_sefaz', sa.DateTime(), nullable=True))


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('nfe_importada', schema=None) as batch_op:
        batch_op.add_column(sa.Column('certificado_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('nfe_importada_certificado_id_fkey', 'certificados_digitais', ['certificado_id'], ['id'])

    with op.batch_alter_table('certificado_digital', schema=None) as batch_op:
        batch_op.drop_column('ultima_consulta_sefaz')
        batch_op.drop_column('bloqueado_ate')

    op.create_table('certificados_digitais',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('empresa_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('cnpj', sa.VARCHAR(length=14), autoincrement=False, nullable=False),
    sa.Column('caminho_r2', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('senha_encriptada', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('ativo', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('principal', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('ultimo_nsu', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('data_criacao', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('data_ultima_consulta', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('data_expiracao', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], name='certificados_digitais_empresa_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='certificados_digitais_pkey')
    )
    # ### end Alembic commands ###
