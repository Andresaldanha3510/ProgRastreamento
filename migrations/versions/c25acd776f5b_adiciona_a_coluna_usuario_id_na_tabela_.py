"""Adiciona a coluna usuario_id na tabela Cobranca

Revision ID: c25acd776f5b
Revises: 
Create Date: 2025-09-18 00:06:50.214687

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c25acd776f5b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cte_parametros',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('proximo_numero', sa.Integer(), nullable=True),
    sa.Column('serie_padrao', sa.String(length=3), nullable=True),
    sa.Column('aliquota_icms_padrao', sa.Float(), nullable=True),
    sa.Column('natureza_operacao', sa.String(length=100), nullable=True),
    sa.Column('codigo_cfop', sa.String(length=4), nullable=True),
    sa.Column('tipo_documento', sa.String(length=1), nullable=True),
    sa.Column('tipo_servico', sa.String(length=1), nullable=True),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('empresa_id')
    )
    op.create_table('cte_emitido',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('viagem_id', sa.Integer(), nullable=True),
    sa.Column('chave_acesso', sa.String(length=44), nullable=True),
    sa.Column('numero_cte', sa.String(length=9), nullable=False),
    sa.Column('serie', sa.String(length=3), nullable=False),
    sa.Column('data_emissao', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('dest_cnpj_cpf', sa.String(length=14), nullable=False),
    sa.Column('dest_nome', sa.String(length=200), nullable=False),
    sa.Column('dest_endereco', sa.String(length=255), nullable=False),
    sa.Column('dest_cidade', sa.String(length=100), nullable=False),
    sa.Column('dest_uf', sa.String(length=2), nullable=False),
    sa.Column('dest_cep', sa.String(length=8), nullable=False),
    sa.Column('rem_cnpj_cpf', sa.String(length=14), nullable=False),
    sa.Column('rem_nome', sa.String(length=200), nullable=False),
    sa.Column('rem_endereco', sa.String(length=255), nullable=False),
    sa.Column('rem_cidade', sa.String(length=100), nullable=False),
    sa.Column('rem_uf', sa.String(length=2), nullable=False),
    sa.Column('rem_cep', sa.String(length=8), nullable=False),
    sa.Column('natureza_carga', sa.String(length=100), nullable=False),
    sa.Column('peso_bruto', sa.Float(), nullable=False),
    sa.Column('peso_cubado', sa.Float(), nullable=True),
    sa.Column('quantidade_volumes', sa.Integer(), nullable=True),
    sa.Column('valor_carga', sa.Float(), nullable=False),
    sa.Column('modal', sa.String(length=2), nullable=False),
    sa.Column('tipo_servico', sa.String(length=1), nullable=False),
    sa.Column('valor_total_servico', sa.Float(), nullable=False),
    sa.Column('valor_receber', sa.Float(), nullable=False),
    sa.Column('base_calculo_icms', sa.Float(), nullable=True),
    sa.Column('aliquota_icms', sa.Float(), nullable=True),
    sa.Column('valor_icms', sa.Float(), nullable=True),
    sa.Column('placa_veiculo', sa.String(length=15), nullable=True),
    sa.Column('renavam_veiculo', sa.String(length=11), nullable=True),
    sa.Column('motorista_cpf', sa.String(length=11), nullable=True),
    sa.Column('motorista_nome', sa.String(length=100), nullable=True),
    sa.Column('xml_content', sa.LargeBinary(), nullable=True),
    sa.Column('protocolo_autorizacao', sa.String(length=20), nullable=True),
    sa.Column('data_autorizacao', sa.DateTime(), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], ),
    sa.ForeignKeyConstraint(['viagem_id'], ['viagem.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('cte_emitido', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cte_emitido_chave_acesso'), ['chave_acesso'], unique=True)
        batch_op.create_index(batch_op.f('ix_cte_emitido_numero_cte'), ['numero_cte'], unique=False)
        batch_op.create_index(batch_op.f('ix_cte_emitido_status'), ['status'], unique=False)

    op.create_table('cte_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cte_id', sa.Integer(), nullable=False),
    sa.Column('descricao', sa.String(length=255), nullable=False),
    sa.Column('ncm', sa.String(length=8), nullable=True),
    sa.Column('quantidade', sa.Float(), nullable=True),
    sa.Column('unidade', sa.String(length=10), nullable=True),
    sa.Column('peso_item', sa.Float(), nullable=True),
    sa.Column('valor_item', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['cte_id'], ['cte_emitido.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cte_item')
    with op.batch_alter_table('cte_emitido', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cte_emitido_status'))
        batch_op.drop_index(batch_op.f('ix_cte_emitido_numero_cte'))
        batch_op.drop_index(batch_op.f('ix_cte_emitido_chave_acesso'))

    op.drop_table('cte_emitido')
    op.drop_table('cte_parametros')
    # ### end Alembic commands ###
