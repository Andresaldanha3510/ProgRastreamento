"""Adiciona tabelas para NFe e Certificado

Revision ID: c32b24862694
Revises: 
Create Date: 2025-08-25 09:18:08.536758

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c32b24862694'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('certificado_digital',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('nome_arquivo', sa.String(length=255), nullable=False),
    sa.Column('caminho_r2', sa.String(length=500), nullable=False),
    sa.Column('senha_cifrada', sa.LargeBinary(), nullable=False),
    sa.Column('data_validade', sa.Date(), nullable=False),
    sa.Column('ultimo_nsu', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('empresa_id')
    )
    op.create_table('nfe_importada',
    sa.Column('chave_acesso', sa.String(length=44), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('nsu', sa.String(length=20), nullable=False),
    sa.Column('emitente_cnpj', sa.String(length=14), nullable=False),
    sa.Column('emitente_nome', sa.String(length=255), nullable=False),
    sa.Column('data_emissao', sa.DateTime(), nullable=False),
    sa.Column('valor_total', sa.Float(), nullable=False),
    sa.Column('xml_content', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('data_download', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], ),
    sa.PrimaryKeyConstraint('chave_acesso')
    )
    with op.batch_alter_table('nfe_importada', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_nfe_importada_nsu'), ['nsu'], unique=False)
        batch_op.create_index(batch_op.f('ix_nfe_importada_status'), ['status'], unique=False)

    with op.batch_alter_table('conta_pagar', schema=None) as batch_op:
        batch_op.drop_index('ix_conta_pagar_data_vencimento')
        batch_op.drop_index('ix_conta_pagar_status')
    
    op.drop_constraint('nfe_recebida_conta_pagar_id_fkey', 'nfe_recebida', type_='foreignkey')
    op.drop_table('conta_pagar')
    with op.batch_alter_table('nfe_recebida', schema=None) as batch_op:
        batch_op.drop_index('ix_nfe_recebida_chave_acesso')
        batch_op.drop_index('ix_nfe_recebida_status')

    op.drop_table('nfe_recebida')
    with op.batch_alter_table('empresa', schema=None) as batch_op:
        batch_op.drop_index('ix_empresa_cnpj')
        batch_op.create_index(batch_op.f('ix_empresa_cnpj'), ['cnpj'], unique=True)
        batch_op.drop_column('certificado_a1_path')
        batch_op.drop_column('certificado_a1_senha_encrypted')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('empresa', schema=None) as batch_op:
        batch_op.add_column(sa.Column('certificado_a1_senha_encrypted', postgresql.BYTEA(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('certificado_a1_path', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_empresa_cnpj'))
        batch_op.create_index('ix_empresa_cnpj', ['cnpj'], unique=False)

    op.create_table('nfe_recebida',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('empresa_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('chave_acesso', sa.VARCHAR(length=44), autoincrement=False, nullable=False),
    sa.Column('cnpj_emitente', sa.VARCHAR(length=14), autoincrement=False, nullable=False),
    sa.Column('razao_social_emitente', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('data_emissao', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('data_vencimento', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('valor_total', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('xml_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('conta_pagar_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['conta_pagar_id'], ['conta_pagar.id'], name='nfe_recebida_conta_pagar_id_fkey'),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], name='nfe_recebida_empresa_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='nfe_recebida_pkey')
    )
    with op.batch_alter_table('nfe_recebida', schema=None) as batch_op:
        batch_op.create_index('ix_nfe_recebida_status', ['status'], unique=False)
        batch_op.create_index('ix_nfe_recebida_chave_acesso', ['chave_acesso'], unique=True)

    op.create_table('conta_pagar',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('empresa_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('descricao', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('valor', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('data_vencimento', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('data_pagamento', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], name='conta_pagar_empresa_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='conta_pagar_pkey')
    )
    with op.batch_alter_table('conta_pagar', schema=None) as batch_op:
        batch_op.create_index('ix_conta_pagar_status', ['status'], unique=False)
        batch_op.create_index('ix_conta_pagar_data_vencimento', ['data_vencimento'], unique=False)

    with op.batch_alter_table('nfe_importada', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_nfe_importada_status'))
        batch_op.drop_index(batch_op.f('ix_nfe_importada_nsu'))

    op.drop_table('nfe_importada')
    op.drop_table('certificado_digital')
    # ### end Alembic commands ###
